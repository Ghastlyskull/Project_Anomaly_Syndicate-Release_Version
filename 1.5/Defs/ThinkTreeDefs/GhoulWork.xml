<?xml version="1.0" encoding="utf-8"?>

<Defs>
  <ThinkTreeDef>
    <defName>WorkGhoul</defName>
    <thinkRoot Class="ThinkNode_Priority">
      <subNodes>
        <!-- Keep lying down if we have to -->
        <li Class="ThinkNode_ConditionalMustKeepLyingDown">
          <subNodes>
            <!-- Do a queued job if possible -->
            <li Class="ThinkNode_QueuedJob">
              <inBedOnly>true</inBedOnly>
            </li>

            <!-- Keep lying down -->
            <li Class="JobGiver_KeepLyingDown" />
          </subNodes>
        </li>

        <li Class="ThinkNode_Subtree">
          <treeDef>Downed</treeDef>
        </li>
        <li Class="ThinkNode_Subtree">
          <treeDef>BurningResponse</treeDef>
        </li>
        <li Class="ThinkNode_Subtree">
          <treeDef>MentalStateCritical</treeDef>
        </li>

        <!-- Escaping-->
        <li Class="ThinkNodeConditional_EscapingHoldingPlatform">
          <subNodes>
            <li Class="JobGiver_EscapingHoldingPlatform" />
          </subNodes>
        </li>

        <!-- React to close melee threat -->
        <li Class="JobGiver_ReactToCloseMeleeThreat" />

        <!-- Do a queued job -->
        <li Class="ThinkNode_QueuedJob" />

        <!-- Mental state non critical -->
        <li Class="ThinkNode_Subtree">
          <treeDef>MentalStateNonCritical</treeDef>
        </li>

        <!-- Wait if drafted -->
        <li Class="ThinkNode_ConditionalOfPlayerFaction">
          <subNodes>
            <li Class="ThinkNode_Tagger">
              <tagToGive>DraftedOrder</tagToGive>
              <subNodes>
                <li Class="JobGiver_MoveToStandable" />
                <li Class="JobGiver_Orders" />
              </subNodes>
            </li>
          </subNodes>
        </li>

        <!-- Lord directives (high priority) -->
        <li Class="ThinkNode_JoinVoluntarilyJoinableLord">
          <dutyHook>HighPriority</dutyHook>
          <subNodes>
            <li Class="ThinkNode_Subtree">
              <treeDef>LordDuty</treeDef>
            </li>
          </subNodes>
        </li>

        <!-- If on colonist team, do forced and emergency work -->
        <li Class="ThinkNode_ConditionalOfPlayerFaction">
          <subNodes>
            <!-- Seek allowed area -->
            <li Class="JobGiver_SeekAllowedArea" />

            <!-- Seek safe temperatures -->
            <li Class="JobGiver_BringBabyToSafety" />
            <li Class="JobGiver_SeekSafeTemperature" />

            <!-- Drop unnused inventory -->
            <li Class="JobGiver_DropUnusedInventory" />

            <!-- Emergency work -->
            <li Class="JobGiver_Work">
              <leaveJoinableLordIfIssuesJob>true</leaveJoinableLordIfIssuesJob>
              <emergency>true</emergency>
            </li>

            <!-- Satisfy basic needs -->
            <li Class="ThinkNode_Subtree">
              <treeDef>SatisfyBasicNeeds</treeDef>
            </li>

            <!-- Lord directives (medium priority) -->
            <li Class="ThinkNode_JoinVoluntarilyJoinableLord">
              <dutyHook>MediumPriority</dutyHook>
              <subNodes>
                <li Class="ThinkNode_Subtree">
                  <treeDef>LordDuty</treeDef>
                </li>
              </subNodes>
            </li>

            <!-- Pick up a weapon dropped while previously downed -->
            <li Class="JobGiver_PickupDroppedWeapon">
              <ignoreForbidden>true</ignoreForbidden>
            </li>

            <!-- Optimize apparel -->
            <li Class="ThinkNode_Tagger">
              <tagToGive>ChangingApparel</tagToGive>
              <subNodes>
                <li Class="JobGiver_OptimizeApparel">
                  <leaveJoinableLordIfIssuesJob>true</leaveJoinableLordIfIssuesJob>
                </li>
              </subNodes>
            </li>

            <!-- Take for inventory stock -->
            <li Class="ThinkNode_Tagger">
              <tagToGive>TakeForInventoryStock</tagToGive>
              <subNodes>
                <li Class="JobGiver_TakeForInventoryStock">
                  <leaveJoinableLordIfIssuesJob>true</leaveJoinableLordIfIssuesJob>
                </li>
              </subNodes>
            </li>

            <!-- Unload your inventory -->
            <li Class="ThinkNode_Tagger">
              <tagToGive>UnloadingOwnInventory</tagToGive>
              <subNodes>
                <li Class="JobGiver_UnloadYourInventory" />
              </subNodes>
            </li>

          </subNodes>
        </li>
        
        <!-- Insertion hook for modders -->
        <li Class="ThinkNode_SubtreesByTag">
          <insertTag>Ghoul_PreMain</insertTag>
        </li>

        <!-- Main work ghoul behavior core -->
        <li Class="ThinkNode_ConditionalOfPlayerFaction">
          <subNodes>
            <li Class="ThinkNode_Subtree">
              <treeDef>MainWorkGhoulBehaviorCore</treeDef>
              <leaveJoinableLordIfIssuesJob>true</leaveJoinableLordIfIssuesJob>
            </li>
          </subNodes>
        </li>

        <!-- Fight enemies -->
        <li Class="JobGiver_AIFightEnemies">
          <targetAcquireRadius>30</targetAcquireRadius>
          <targetKeepRadius>35</targetKeepRadius>
        </li>

        <!-- Resting for medical reasons -->
        <li Class="ThinkNode_ConditionalOfPlayerFaction">
          <subNodes>
            <li Class="ThinkNode_Tagger">
              <tagToGive>RestingForMedicalReasons</tagToGive>
              <subNodes>
                <li Class="JobGiver_PatientGoToBed">
                  <urgentOnly>true</urgentOnly>
                </li>
              </subNodes>
            </li>
          </subNodes>
        </li>


        <!-- Behavior from traits -->
        <li Class="ThinkNode_TraitBehaviors" />
        
        
        <!-- Insertion hook for modders -->
        <li Class="ThinkNode_SubtreesByTag">
          <insertTag>Ghoul_PreWander</insertTag>
        </li>

        <!-- Wander -->
        <li Class="ThinkNode_Tagger">
          <subNodes>
            <li Class="JobGiver_ShamblerWander">
              <wanderRadius>12</wanderRadius>
            </li>
          </subNodes>
        </li>

        <li Class="JobGiver_IdleError"/>
      </subNodes>
    </thinkRoot>
  </ThinkTreeDef>

  <ThinkTreeDef>
    <defName>WorkGhoulConstant</defName>
    <thinkRoot Class="ThinkNode_Priority">
      <subNodes>
        <!-- Despawned -->
        <li Class="ThinkNode_Subtree">
          <treeDef>Despawned</treeDef>
        </li>

        <li Class="ThinkNode_ConditionalCanDoConstantThinkTreeJobNow">
          <subNodes>
            <!-- Flee explosion -->
            <li Class="JobGiver_FleePotentialExplosion" />
            
            <!-- Join auto joinable caravan -->
            <li Class="ThinkNode_Subtree">
              <treeDef>JoinAutoJoinableCaravan</treeDef>
            </li>

            <!-- Hostility response -->
            <li Class="JobGiver_ConfigurableHostilityResponse" />
          </subNodes>
        </li>

        <li Class="ThinkNode_ConditionalCanDoLordJobNow">
          <subNodes>
            <!-- Lord directives -->
            <li Class="ThinkNode_Subtree">
              <treeDef>LordDutyConstant</treeDef>
            </li>
          </subNodes>
        </li>
      </subNodes>
    </thinkRoot>
  </ThinkTreeDef>
  <ThinkTreeDef>
    <defName>MainWorkGhoulBehaviorCore</defName>
    <thinkRoot Class="ThinkNode_Tagger">
      <tagToGive>SatisfyingNeeds</tagToGive>
      <!-- note that JobGiver_Work will assign its own tag -->
      <subNodes>
        <li Class="ThinkNode_PrioritySorter">
          <subNodes>
            <li Class="JobGiver_GetFood"/>
            <li Class="JobGiver_GetRest"/>
            <li Class="JobGiver_SatisfyChemicalNeed"/>
            <li Class="JobGiver_TakeDrugsForDrugPolicy"/>
            <li Class="JobGiver_GetAgeReversal"/>
            <li Class="JobGiver_MoveDrugsToInventory"/>
            <li Class="JobGiver_GetNeuralSupercharge"/>
            <li Class="JobGiver_GetHemogen" MayRequire="Ludeon.RimWorld.Biotech"/>
            <li Class="JobGiver_MeditateInBed"/>
            <li Class="JobGiver_SatifyChemicalDependency" MayRequire="Ludeon.RimWorld.Biotech" />
            <li Class="ThinkNode_Priority_Learn" MayRequire="Ludeon.RimWorld.Biotech">
              <subNodes>
                <li Class="JobGiver_Learn" />
              </subNodes>
            </li>
            <li Class="ThinkNode_Priority_GetJoy">
              <subNodes>
                <li Class="JobGiver_GetJoy"/>
                <li Class="JobGiver_GetJoyInBed"/>
              </subNodes>
            </li>
            <li Class="JobGiver_Meditate"/>
            <li Class="JobGiver_Reload"/>
            <li Class="JobGiver_Work"/>
          </subNodes>
        </li>
      </subNodes>
    </thinkRoot>
  </ThinkTreeDef>
</Defs>